{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAkCC,mBAAS,IAA3C,mBAAMC,EAAN,KAAkBC,EAAlB,KAiBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAQ,IAI1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAM,OACNC,MAAQT,EACRU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAE,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,gDAEmCC,UAAWH,GAF9C,+DAGCI,MAAMF,GAHP,cAGZG,EAHY,gBAIEA,EAAKC,OAJP,uBAIXC,EAJW,EAIXA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATxB,kBAYXM,GAZW,4CAAF,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAKgB,IAAMN,IACtB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECFwB,SAACA,GACzB,MAAuBd,mBAAS,CAC5BqB,KAAM,GACNa,SAAQ,IAFZ,mBAAOC,EAAP,KAAaC,EAAb,KAiBA,OAZAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAEGqB,EDhBuBK,CAAa1B,GAA/Ba,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qCACI,oBAAIJ,UAAW,oCAAf,SAAoDhB,IAEnDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADEA,EAAIC,aEbzBgB,EAAe,WAExB,MAAoCzC,mBAAS,CAAC,kBAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCXjC6B,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.63f8b616.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n//Este componente se va a encargar de escribir la informacion en el input y enviarlo al  componente padre\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const[inputValue, setInputValue]= useState(\"\");\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length >2){\r\n            \r\n        //Con esta condicion evitamos que se envie un vacio al momento de dar enter en el input\r\n        //trim es para eliminar espacios vacios\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        // Dejamos vacio el setInputValue luego del Submit\r\n        }    \r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}> \r\n            <input\r\n                type= \"text\"\r\n                value= {inputValue}\r\n                onChange = {handleInputChange}\r\n            />\r\n        </form>\r\n       \r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs= async (category) => {\r\n\r\n    const url= `http://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=IMbiaVgjQK7nfPFPbMjTRCHF7y07hcN1`\r\n    const resp = await fetch(url);\r\n    const {data} =await resp.json();\r\n    const gifs = data.map (img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from \"react\";\r\n//Mostramos las imagenes\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src= {url} alt= {title} />\r\n            <p>{title}</p>\r\n        </div>\r\n        \r\n    )\r\n}","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const {data:images, loading}= useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className= \"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem \r\n                            key= {img.id}\r\n                            {...img}\r\n                        // Mostramos los titulos de las imagenes\r\n                         />\r\n                    ))\r\n                }\r\n           \r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}","import { useState, useEffect } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state,setState]=useState({\r\n        data: [],\r\n        loading:true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs (category)\r\n            .then( imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });   \r\n            })\r\n           \r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport {AddCategory} from './components/AddCategory';\r\nimport {GifGrid} from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['One Punch Man']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr /> \r\n\r\n            <ol>\r\n                {\r\n                    categories.map (category => (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category} \r\n                        />\r\n                    ))\r\n                        \r\n                }\r\n            </ol>\r\n        </>\r\n    \r\n    )\r\n    \r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GiftExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}